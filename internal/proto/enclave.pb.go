// SPDX-FileCopyrightText: Â© 2024 Nadim Kobeissi <nadim@symbolic.software>
// SPDX-License-Identifier: GPL-2.0-only

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.19.6
// source: enclave.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Page struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body    string `protobuf:"bytes,1,opt,name=Body,proto3" json:"Body,omitempty"`
	ModDate int64  `protobuf:"varint,2,opt,name=ModDate,proto3" json:"ModDate,omitempty"`
}

func (x *Page) Reset() {
	*x = Page{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enclave_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Page) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Page) ProtoMessage() {}

func (x *Page) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Page.ProtoReflect.Descriptor instead.
func (*Page) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{0}
}

func (x *Page) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Page) GetModDate() int64 {
	if x != nil {
		return x.ModDate
	}
	return 0
}

type Notebook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pages []*Page `protobuf:"bytes,1,rep,name=Pages,proto3" json:"Pages,omitempty"`
}

func (x *Notebook) Reset() {
	*x = Notebook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enclave_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notebook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notebook) ProtoMessage() {}

func (x *Notebook) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notebook.ProtoReflect.Descriptor instead.
func (*Notebook) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{1}
}

func (x *Notebook) GetPages() []*Page {
	if x != nil {
		return x.Pages
	}
	return nil
}

type EncryptedNotebook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotebookId []byte `protobuf:"bytes,1,opt,name=NotebookId,proto3" json:"NotebookId,omitempty"`
	DecoyFor   []byte `protobuf:"bytes,2,opt,name=DecoyFor,proto3" json:"DecoyFor,omitempty"`
	DecoyFuse  bool   `protobuf:"varint,3,opt,name=DecoyFuse,proto3" json:"DecoyFuse,omitempty"`
	Data       []byte `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
	Nonce      []byte `protobuf:"bytes,5,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
}

func (x *EncryptedNotebook) Reset() {
	*x = EncryptedNotebook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enclave_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptedNotebook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptedNotebook) ProtoMessage() {}

func (x *EncryptedNotebook) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptedNotebook.ProtoReflect.Descriptor instead.
func (*EncryptedNotebook) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{2}
}

func (x *EncryptedNotebook) GetNotebookId() []byte {
	if x != nil {
		return x.NotebookId
	}
	return nil
}

func (x *EncryptedNotebook) GetDecoyFor() []byte {
	if x != nil {
		return x.DecoyFor
	}
	return nil
}

func (x *EncryptedNotebook) GetDecoyFuse() bool {
	if x != nil {
		return x.DecoyFuse
	}
	return false
}

func (x *EncryptedNotebook) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *EncryptedNotebook) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

type NotebookId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *NotebookId) Reset() {
	*x = NotebookId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enclave_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotebookId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotebookId) ProtoMessage() {}

func (x *NotebookId) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotebookId.ProtoReflect.Descriptor instead.
func (*NotebookId) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{3}
}

func (x *NotebookId) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg []byte `protobuf:"bytes,1,opt,name=Msg,proto3" json:"Msg,omitempty"`
}

func (x *Ping) Reset() {
	*x = Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enclave_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{4}
}

func (x *Ping) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

type PutNotebookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode int32 `protobuf:"varint,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
}

func (x *PutNotebookResponse) Reset() {
	*x = PutNotebookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enclave_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutNotebookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutNotebookResponse) ProtoMessage() {}

func (x *PutNotebookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutNotebookResponse.ProtoReflect.Descriptor instead.
func (*PutNotebookResponse) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{5}
}

func (x *PutNotebookResponse) GetResponseCode() int32 {
	if x != nil {
		return x.ResponseCode
	}
	return 0
}

type GetNotebookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode int32  `protobuf:"varint,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	NotebookId   []byte `protobuf:"bytes,2,opt,name=NotebookId,proto3" json:"NotebookId,omitempty"`
	Data         []byte `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	Nonce        []byte `protobuf:"bytes,4,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
}

func (x *GetNotebookResponse) Reset() {
	*x = GetNotebookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enclave_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotebookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotebookResponse) ProtoMessage() {}

func (x *GetNotebookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotebookResponse.ProtoReflect.Descriptor instead.
func (*GetNotebookResponse) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{6}
}

func (x *GetNotebookResponse) GetResponseCode() int32 {
	if x != nil {
		return x.ResponseCode
	}
	return 0
}

func (x *GetNotebookResponse) GetNotebookId() []byte {
	if x != nil {
		return x.NotebookId
	}
	return nil
}

func (x *GetNotebookResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetNotebookResponse) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

var File_enclave_proto protoreflect.FileDescriptor

var file_enclave_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x34, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x42, 0x6f,
	0x64, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x6f, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x4d, 0x6f, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x2d, 0x0a, 0x08,
	0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x21, 0x0a, 0x05, 0x50, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x05, 0x50, 0x61, 0x67, 0x65, 0x73, 0x22, 0x97, 0x01, 0x0a, 0x11,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x63, 0x6f, 0x79, 0x46, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x44, 0x65, 0x63, 0x6f, 0x79, 0x46, 0x6f, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x44, 0x65, 0x63, 0x6f, 0x79, 0x46, 0x75, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x44, 0x65, 0x63, 0x6f, 0x79, 0x46, 0x75, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x1c, 0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x02, 0x49, 0x64, 0x22, 0x18, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x4d,
	0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x22, 0x39, 0x0a,
	0x13, 0x50, 0x75, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x6e, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x32, 0xbf,
	0x01, 0x0a, 0x0e, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x26, 0x0a, 0x08, 0x50, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6e, 0x67, 0x12, 0x0b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x1a, 0x0b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0b, 0x50, 0x75, 0x74,
	0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x74, 0x4e, 0x6f,
	0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3e, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x12,
	0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x49, 0x64, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f,
	0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_enclave_proto_rawDescOnce sync.Once
	file_enclave_proto_rawDescData = file_enclave_proto_rawDesc
)

func file_enclave_proto_rawDescGZIP() []byte {
	file_enclave_proto_rawDescOnce.Do(func() {
		file_enclave_proto_rawDescData = protoimpl.X.CompressGZIP(file_enclave_proto_rawDescData)
	})
	return file_enclave_proto_rawDescData
}

var file_enclave_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_enclave_proto_goTypes = []interface{}{
	(*Page)(nil),                // 0: proto.Page
	(*Notebook)(nil),            // 1: proto.Notebook
	(*EncryptedNotebook)(nil),   // 2: proto.EncryptedNotebook
	(*NotebookId)(nil),          // 3: proto.NotebookId
	(*Ping)(nil),                // 4: proto.Ping
	(*PutNotebookResponse)(nil), // 5: proto.PutNotebookResponse
	(*GetNotebookResponse)(nil), // 6: proto.GetNotebookResponse
}
var file_enclave_proto_depIdxs = []int32{
	0, // 0: proto.Notebook.Pages:type_name -> proto.Page
	4, // 1: proto.EnclaveService.PingPong:input_type -> proto.Ping
	2, // 2: proto.EnclaveService.PutNotebook:input_type -> proto.EncryptedNotebook
	3, // 3: proto.EnclaveService.GetNotebook:input_type -> proto.NotebookId
	4, // 4: proto.EnclaveService.PingPong:output_type -> proto.Ping
	5, // 5: proto.EnclaveService.PutNotebook:output_type -> proto.PutNotebookResponse
	6, // 6: proto.EnclaveService.GetNotebook:output_type -> proto.GetNotebookResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_enclave_proto_init() }
func file_enclave_proto_init() {
	if File_enclave_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_enclave_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Page); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enclave_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notebook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enclave_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptedNotebook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enclave_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotebookId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enclave_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enclave_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutNotebookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enclave_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotebookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_enclave_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_enclave_proto_goTypes,
		DependencyIndexes: file_enclave_proto_depIdxs,
		MessageInfos:      file_enclave_proto_msgTypes,
	}.Build()
	File_enclave_proto = out.File
	file_enclave_proto_rawDesc = nil
	file_enclave_proto_goTypes = nil
	file_enclave_proto_depIdxs = nil
}
